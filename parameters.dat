###############################################
########## DEFAULT PARAMETERS FILE ############
###############################################

# Model Optns           
which_mc_model = 5        # (1) MC-CGC 
                          # (5) MC-Glb            

# Sub-Model Optns                 
sub_model = 1             # CGC-> (7) KLN model model described in
                          # CGC-> (100) rcbk model described in
                          # Glb-> (1) WN entropy deposited at WN positions. 
                          # Glb-> (2) WN entropy deposited (fractionally) amongst 
                          # BC midpoints: Heinz, Qiu and Moreland.

# KLN Sub-Model Optns
lambda = 0.138            # Lambda in the def. of (Qs)^2 which is prop. to (x0/x)^lambda 
Et = 0                    # (0) Output gluon density; (1) Output energy density.
lgX = 0                   # (0) Ignore large-x effects; (1) Include large-x effects.
tmax = 71                 # Used to generate the T_A, T_B double integral lookup table. 
tmax_subdivision = 3      # Its reciprocal gives the step used to generate the T_A, T_B 
                          # double integral lookup table


# Glauber Optns
alpha = 00             # Alpha defining WN and BC mixture: (1-alpha)/2*WN + alpha*BC
glb_entropy_width = 0.5   # User specified gaussian width for the deposition of entropy 
                          # in the Glauber model 

# Nucleus Optns
Aproj = 1               # Projectile atomic number
Atarg = 1               # Target atomic number
proj_deformed = 0         # (0) Spherical nucleus; (1) Deformed nucleus (see OverLap.cpp)
targ_deformed = 0         # (0) Spherical nucleus; (1) Deformed nucleus (see OverLap.cpp) 

include_NN_correlation = 0   # whether or not to include nucleon-nucleon correlation 
                             # when sample the nucleon position inside the nucleus

# Nucleon Optns
shape_of_nucleons = 3     # (1) Disk-like nucleons with width given by sigmaNN 
                          # (2) Gaussian nucleons with width given by sigmaNN
                          # (3) Gaussian nucleons with energy dependent width calc
                          # by Heinz and Moreland (http://arxiv.org/abs/1108.5379)
                          # (4) Gaussian nucleons with user specified width 
                          # (5-9) Gaussian nucleons for other models (future use)

collision_criterion = 2   # (1) Forces disk-like collision detection
						  # (2) Forces Gaussian collision detection
						  # (3) Forces Dynamic Tn collision detection
						  # (Other) Picks based on shape of nucleons and shape of entropy.
						  
shape_of_entropy = 3      # (1) Disk like entropy
      					  # (2) Normal Gaussian nucleons
                          # (3) valence quark substructure 
quark_width = 0.2         # valence quark entropy deposition width

gaussian_lambda = 4.14    # 3-> Parameter for energy dependent gaussian width
gauss_nucl_width = 0.5    # 4-> User specified width for Gaussian nucleons


# Collision Optns
ecm = 200                 # Beam Energy sqrt(s) in GeV
bmin = 1.3                  # Minimum sampled impact parameter
bmax = 1.3                  # Maximum sampled impact parameter
Npmin = 0                 # Minimum participant nucleon cut
Npmax = 500               # Maximum participant nucleon cut

cutdSdy = 0               # cut centrality with additional requirements on total entropy density (without normalization factor)
cutdSdy_lowerBound =  593.51          # lower bound of the allowed total entropy density
cutdSdy_upperBound =  889.53       # upper bound of the allowed total entropy density


# Monte Carlo Optns
nev = 10000                   # Number of collision events simulated
randomSeed = -1           # If randomSeed < 0 then CPU time is used to seed
backup_number = 100000     # Backs up the averaged profile every "n" events. 0 means 
                          # every step. Use a neg number to turn it off

# Operation Mode Optns
operation = 9             # (1) Generate n transverse density profiles for n events 
                          # (input for event-by-event hydro)
                          # (2) Generate n transverse density profiles for n events 
                          # and their corresponding binary collision table and eccentricities
                          # (inputs for event-by-event hydro with Jet quenching)
                          # (3) Average n transverse density profiles to maximize 
                          # the specified eccentricity (input for single shot hydro) 
                          # (9) Calculate the eccentricity of each event and store 
                          # the data in a table

# Operation Mode Sub-Optns
finalFactor = 1.0       # 1,3,9-> Scale the final density profile by this factor
average_from_order = 2    # 3-> Generate rotated and averaged profiles for each order 
                          # beginning with this order
average_to_order = 3      # 3-> Generate rotated and averaged profiles for each order 
                          # ending with this order
ecc_from_order = 2        # 9-> Calculate the eccentricity of the profile for each order 
                          # beginning with this order
ecc_to_order = 3          # 9-> Calculate the eccentricity of the profile for each order 
                          # ending with this order

# Print to File Optns
use_sd = 1                # Boolean toggle to print the raw CGC and Glauber output 
                          # (CGC: gluon density; Glb: (1-alpha)/2*WN + alpha*BC) 
use_ed = 0                # Boolean toggle to covert the entropy profile using the 
                          # EOS and print the energy profile (do not use if Et=1)
use_4col = 0              # Boolean toggle to print 4 column format (rap, x, y, data)
use_block = 1             # Boolean toggle to print matrix format (good for matlab)
use_5col = 0              # Boolean toggle to print 5 column format (rap, x, y, pt, data)
use_ptCol = 0             # Boolean toggle to print pt-unintegrated table, working in mixed mode

# P_T spectra optns
PT_Flag = 1               # Boolean toggle to output PT-integrated gluon density; if < 0, output pT unintegrated particle spectra; PT_Flag can not take 0
mixedMode = 0             # if > 0, calculate both the pT-unintegrated particle spectra and pT-integrated particle density
                          # All the following parameters in this block will only be effective when pT_Flag < 0 and mixedMode > 0
PT_Min = 0.1              # Minimum value of PT
PT_Max = 2                # Maximum value of PT
PT_order = 2              # =1 output the usual entropy/energy density profile; =2 output pT^2 instead of pT in integrand in KLN
d_PT = 0.1                # Step size of PT in GeV

# Grid Optns
maxx = 4                 # Max grid value along x direction in fm
maxy = 4                 # Max grid value along y direction in fm 
dx = 0.1                  # Step size along x direction in fm
dy = 0.1                  # Step size along y direction in fm
ny = 1                    # Number of rapidity bins (do not set to zero)
ymax = 0                  # Maximum rapidity value (symmetric -ymax to ymax)

# CC fluctions
cc_fluctuation_model = 6  # 0: no fluctuations; 1: NBD constant k; 2: NBD use TA TB to determine n; 6: MCGlb: Gamma distribution for each collision and wounded nucleon
cc_fluctuation_k = 0.75   # constant k; used when cc_fluctuation_model is set to 1.
cc_fluctuation_Gamma_theta = 0.61    # the scale parameter for Gamma distribution theta = 0.9175 (from KNO scaling)

# For jet calculations
output_TATB = 1           # 1: output; 0: no output; only effective when generating averaged profiles
output_rho_binary = 1     # 1: output binary collision density
output_TA = 1             # 1: output nuclear thickness function
output_rhob = 1           # 1: output net baryon density profile

generate_reaction_plane_avg_profile = 0    # switch to generate smooth event-averaged 
                                           # profile with respect to reaction plane defined 
                                           # by the direction of the impact parameter 
                                           # and the beam direction
